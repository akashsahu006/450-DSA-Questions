https://www.geeksforgeeks.org/find-first-node-of-loop-in-a-linked-list/


class Solution
{
    public:
    //Function to remove a loop in the linked list.
    Node* firstNode(Node* head)
    {
        // code here
        // just remove the loop without losing any nodes
        struct Node *slow=head, *fast=head;
        struct firstNode=NULL;
        // This part is finding if there is a loop or not
        bool loop=false;
        while(slow){
            slow=slow->next;
            if(fast->next!=NULL){
                fast=fast->next;
            }
            else{
                break;
            }
            if(fast->next!=NULL){
                fast=fast->next;
            }
            else{
                break;
            }
            if(fast==slow){
                loop=true;
                break;
            }
        }
        if(loop){
        
            //This part is finding the value of node connected to the last node
            slow=head;
            while(slow!=fast){
                slow=slow->next;
                fast=fast->next;
            }
            
            firstNode=slow;
        }
        return firstNode;
    }
};
